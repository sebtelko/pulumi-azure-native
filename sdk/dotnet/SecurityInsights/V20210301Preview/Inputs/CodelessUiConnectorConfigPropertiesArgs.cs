// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20210301Preview.Inputs
{

    /// <summary>
    /// Config to describe the instructions blade
    /// </summary>
    public sealed class CodelessUiConnectorConfigPropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Connector Availability Status
        /// </summary>
        [Input("availability")]
        public Input<Inputs.AvailabilityArgs>? Availability { get; set; }

        [Input("connectivityCriteria")]
        private InputList<Inputs.CodelessUiConnectorConfigPropertiesConnectivityCriteriaArgs>? _connectivityCriteria;

        /// <summary>
        /// Define the way the connector check connectivity
        /// </summary>
        public InputList<Inputs.CodelessUiConnectorConfigPropertiesConnectivityCriteriaArgs> ConnectivityCriteria
        {
            get => _connectivityCriteria ?? (_connectivityCriteria = new InputList<Inputs.CodelessUiConnectorConfigPropertiesConnectivityCriteriaArgs>());
            set => _connectivityCriteria = value;
        }

        /// <summary>
        /// An optional custom image to be used when displaying the connector within Azure Sentinel's connector's gallery
        /// </summary>
        [Input("customImage")]
        public Input<string>? CustomImage { get; set; }

        [Input("dataTypes")]
        private InputList<Inputs.CodelessUiConnectorConfigPropertiesDataTypesArgs>? _dataTypes;

        /// <summary>
        /// Data types to check for last data received
        /// </summary>
        public InputList<Inputs.CodelessUiConnectorConfigPropertiesDataTypesArgs> DataTypes
        {
            get => _dataTypes ?? (_dataTypes = new InputList<Inputs.CodelessUiConnectorConfigPropertiesDataTypesArgs>());
            set => _dataTypes = value;
        }

        /// <summary>
        /// Connector description
        /// </summary>
        [Input("descriptionMarkdown")]
        public Input<string>? DescriptionMarkdown { get; set; }

        [Input("graphQueries")]
        private InputList<Inputs.CodelessUiConnectorConfigPropertiesGraphQueriesArgs>? _graphQueries;

        /// <summary>
        /// The graph query to show the current data status
        /// </summary>
        public InputList<Inputs.CodelessUiConnectorConfigPropertiesGraphQueriesArgs> GraphQueries
        {
            get => _graphQueries ?? (_graphQueries = new InputList<Inputs.CodelessUiConnectorConfigPropertiesGraphQueriesArgs>());
            set => _graphQueries = value;
        }

        /// <summary>
        /// Name of the table the connector will insert the data to
        /// </summary>
        [Input("graphQueriesTableName")]
        public Input<string>? GraphQueriesTableName { get; set; }

        [Input("instructionSteps")]
        private InputList<Inputs.CodelessUiConnectorConfigPropertiesInstructionStepsArgs>? _instructionSteps;

        /// <summary>
        /// Instruction steps to enable the connector
        /// </summary>
        public InputList<Inputs.CodelessUiConnectorConfigPropertiesInstructionStepsArgs> InstructionSteps
        {
            get => _instructionSteps ?? (_instructionSteps = new InputList<Inputs.CodelessUiConnectorConfigPropertiesInstructionStepsArgs>());
            set => _instructionSteps = value;
        }

        /// <summary>
        /// Permissions required for the connector
        /// </summary>
        [Input("permissions")]
        public Input<Inputs.PermissionsArgs>? Permissions { get; set; }

        /// <summary>
        /// Connector publisher name
        /// </summary>
        [Input("publisher")]
        public Input<string>? Publisher { get; set; }

        [Input("sampleQueries")]
        private InputList<Inputs.CodelessUiConnectorConfigPropertiesSampleQueriesArgs>? _sampleQueries;

        /// <summary>
        /// The sample queries for the connector
        /// </summary>
        public InputList<Inputs.CodelessUiConnectorConfigPropertiesSampleQueriesArgs> SampleQueries
        {
            get => _sampleQueries ?? (_sampleQueries = new InputList<Inputs.CodelessUiConnectorConfigPropertiesSampleQueriesArgs>());
            set => _sampleQueries = value;
        }

        /// <summary>
        /// Connector blade title
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        public CodelessUiConnectorConfigPropertiesArgs()
        {
        }
    }
}
